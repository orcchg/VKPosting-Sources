buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'me.tatarka.retrolambda'

frodo {
    enabled = true
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            // Some libraries have issues with this.
        disable 'OldTargetApi'              // Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             // For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  // For testing purpose. This is safe to remove.
    }

//    signingConfigs {
//        debug {
//            storeFile file('../buildsystem/debug.keystore')
//            storePassword 'android'
//            keyAlias 'androiddebugkey'
//            keyPassword 'android'
//        }
//    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-androidannotations.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-butterknife-7.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-glide.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-gson.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-square-okhttp3.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-square-okio.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-project.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-realm.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-retrolambda.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-rx-java.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-square-retrofit2.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-support-v7-appcompat.pro"
            proguardFile "${rootProject.ext.proguardPropertiesPath}/proguard-support-v7-cardview.pro"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res-main',
                           'src/main/res-screen/group/detail',
                           'src/main/res-screen/group/list',
                           'src/main/res-screen/keyword/create',
                           'src/main/res-screen/keyword/list',
                           'src/main/res-screen/post/create',
                           'src/main/res-screen/post/list',
                           'src/main/res-screen/post/single',
                           'src/main/res-screen/post/view',
                           'src/main/res-screen/report',
                           'src/main/res-screen/status']
            file('src/main/res-screen')
                    .listFiles()
                    .each { res.srcDirs += it.path }
        }
    }
}

task copyDocs(type: Copy) {
    doLast {
        from('src/main/res-main/values-ru')
        into('src/main/res-main/values-ba')
        include('strings.xml')
    }
}

preBuild.dependsOn(copyDocs)

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    compile project(':domain')
    compile project(':data')
//    debugCompile project(path: ':domain', configuration: "debug")
//    debugCompile project(path: ':data',   configuration: "debug")
//
//    releaseCompile project(path: ':domain', configuration: "release")
//    releaseCompile project(path: ':data',   configuration: "release")

    apt presentationDependencies.autoValue
    apt presentationDependencies.butterKnifeCompiler
    apt presentationDependencies.daggerCompiler

    compile presentationDependencies.androidDesign
    compile presentationDependencies.androidSupportV4
    compile presentationDependencies.androidSupportV7
    compile presentationDependencies.androidSupportV13
    compile presentationDependencies.butterKnife
    compile presentationDependencies.cardView
    compile presentationDependencies.circleImageView
    compile presentationDependencies.circleLoadingView
    compile presentationDependencies.dagger
    compile presentationDependencies.eventbus
    compile presentationDependencies.expandRecyclerView
    compile presentationDependencies.fillableProgress
    compile presentationDependencies.glide
    compile presentationDependencies.javaxAnnotation
    compile presentationDependencies.javaxInject
    compile(presentationDependencies.materialDrawer) { transitive = true }
    compile presentationDependencies.percentLayout
    compile presentationDependencies.progressbar
    compile presentationDependencies.progressbarCircular
    compile presentationDependencies.recyclerView
    compile presentationDependencies.timber

    provided presentationDependencies.autoValue
    provided presentationDependencies.javaxAnnotation

    testCompile presentationTestDependencies.junit

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile(presentationTestDependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile presentationTestDependencies.testingSupportLib

    //Development
    compile developmentDependencies.leakCanary
}
